name: CI
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Run nightly to catch regressions

permissions:
  contents: write
  pages: write
  id-token: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

# TODO: 
# 1. Add Clippy
# 2. Add mock Funderberker testing
# 3. Add feature testing
jobs:
  unit_tests:
    name: Unit Test Individual Crates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [arch, drivers, hypervisor, logger, macros, pmm, scheduler, slab, utils]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          key: crate-${{ matrix.crate }}
          toolchain: nightly
      - name: Test ${{ matrix.crate }}
        run: cargo test -p ${{ matrix.crate }} --verbose

  formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
          toolchain: nightly
      - uses: Swatinem/rust-cache@v2
      - name: Check formatting
        run: cargo fmt --all -- --check

  docs_tests:
    name: Documentation Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@v2
      - name: Run doc tests
        run: cargo test --workspace --doc --verbose

  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@v2
      - name: Run Cargo Check
        run: |
          cargo check --workspace --exclude kernel --all-targets
          cargo check -p kernel

  # Documentation job (depends on tests passing)
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: docs_tests  # Only run if tests pass
    permissions:
      pages: write
      id-token: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@v2
      
      # Build docs
      - name: Build docs
        run: |
          cargo doc --workspace --no-deps --verbose
          echo '<meta http-equiv="refresh" content="0;url=aoc/index.html">' > target/doc/index.html

      # Setup and deploy to GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./target/doc/kernel
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        id: deployment
        uses: actions/deploy-pages@v4
